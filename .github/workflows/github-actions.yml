name: Deploy to ECR

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew bootjar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id : ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to AWS ECR
        run: aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_URL }}

      - name: Build, tag, and push dev-image to Amazon ECR
        id: build-image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          docker build -t hhplus-dev .
          docker tag hhplus-dev:latest ${{ secrets.ECR_URL }}/hhplus-dev:latest
          docker push ${{ secrets.ECR_URL }}/hhplus-dev:latest

      - name: Render ECS task-definition
        id: render-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: .taskdefinition/task-definition.json
          container-name: service-prod
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task-definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition.outputs.task-definition }}
          service: hhplus-dev
          cluster: cluster-hhplus-dev
          wait-for-service-stability: true